# Logfile created on 2019-06-21 21:45:38 +0200 by logger.rb/66358
I, [2019-06-21T21:45:38.134125 #28289]  INFO -- : (0.004192s) SET standard_conforming_strings = ON
I, [2019-06-21T21:45:38.134454 #28289]  INFO -- : (0.000225s) SET client_min_messages = 'WARNING'
I, [2019-06-21T21:45:38.134627 #28289]  INFO -- : (0.000130s) SET DateStyle = 'ISO'
I, [2019-06-21T21:45:38.161741 #28289]  INFO -- : (0.024242s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"air_sensors"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T21:45:38.167136 #28289] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"location...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T21:45:38.169685 #28289] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: SELECT * FROM "locations" LIMIT 1
                      ^: SELECT * FROM "locations" LIMIT 1
E, [2019-06-21T21:45:38.174733 #28289] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurem...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurements"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T21:45:38.176739 #28289] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: SELECT * FROM "measurements" LIMIT 1
                      ^: SELECT * FROM "measurements" LIMIT 1
I, [2019-06-21T21:45:38.183884 #28289]  INFO -- : (0.001776s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"geo_locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
I, [2019-06-21T21:46:46.866673 #28289]  INFO -- : (0.002747s) SELECT "relname" FROM "pg_class" INNER JOIN "pg_namespace" ON ("pg_namespace"."oid" = "pg_class"."relnamespace") WHERE (("relkind" = 'r') AND ("pg_namespace"."nspname" = any(current_schemas(false))))
I, [2019-06-21T21:47:15.765139 #28289]  INFO -- : (0.006649s) SELECT count(*) AS "count" FROM "air_sensors" LIMIT 1
I, [2019-06-21T22:02:30.258314 #4217]  INFO -- : (0.005089s) SET standard_conforming_strings = ON
I, [2019-06-21T22:02:30.259235 #4217]  INFO -- : (0.000732s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:02:30.259690 #4217]  INFO -- : (0.000318s) SET DateStyle = 'ISO'
I, [2019-06-21T22:02:30.273415 #4217]  INFO -- : (0.013327s) CREATE TABLE IF NOT EXISTS "schema_info" ("version" integer DEFAULT 0 NOT NULL)
I, [2019-06-21T22:02:30.274122 #4217]  INFO -- : (0.000482s) SELECT * FROM "schema_info" LIMIT 1
I, [2019-06-21T22:02:30.274542 #4217]  INFO -- : (0.000209s) SELECT 1 AS "one" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:02:30.276466 #4217]  INFO -- : (0.001702s) SELECT pg_attribute.attname AS pk FROM pg_class, pg_attribute, pg_index, pg_namespace WHERE pg_class.oid = pg_attribute.attrelid AND pg_class.relnamespace = pg_namespace.oid AND pg_class.oid = pg_index.indrelid AND pg_index.indkey[0] = pg_attribute.attnum AND pg_index.indisprimary = 't' AND pg_class.oid = CAST(CAST('"schema_info"' AS regclass) AS oid)
I, [2019-06-21T22:02:30.279474 #4217]  INFO -- : (0.002749s) INSERT INTO "schema_info" ("version") VALUES (0) RETURNING NULL
I, [2019-06-21T22:02:30.280104 #4217]  INFO -- : (0.000392s) SELECT count(*) AS "count" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:02:30.280426 #4217]  INFO -- : (0.000147s) SELECT "version" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:03:19.403620 #5301]  INFO -- : (0.000210s) SET standard_conforming_strings = ON
I, [2019-06-21T22:03:19.403856 #5301]  INFO -- : (0.000149s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:03:19.404040 #5301]  INFO -- : (0.000139s) SET DateStyle = 'ISO'
I, [2019-06-21T22:03:19.404569 #5301]  INFO -- : (0.000330s) CREATE TABLE IF NOT EXISTS "schema_info" ("version" integer DEFAULT 0 NOT NULL)
I, [2019-06-21T22:03:19.405374 #5301]  INFO -- : (0.000669s) SELECT * FROM "schema_info" LIMIT 1
I, [2019-06-21T22:03:19.405737 #5301]  INFO -- : (0.000194s) SELECT 1 AS "one" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:03:19.406235 #5301]  INFO -- : (0.000354s) SELECT count(*) AS "count" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:03:19.406587 #5301]  INFO -- : (0.000211s) SELECT "version" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:03:19.407104 #5301]  INFO -- : Begin applying migration version 1, direction: up
I, [2019-06-21T22:03:19.407289 #5301]  INFO -- : (0.000121s) BEGIN
E, [2019-06-21T22:03:19.422919 #5301] ERROR -- : PG::DuplicateTable: ERROR:  relation "air_sensors" already exists: CREATE TABLE "air_sensors" ("id" serial PRIMARY KEY, "luftdaten_id" integer NOT NULL, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)
I, [2019-06-21T22:03:19.423465 #5301]  INFO -- : (0.000229s) ROLLBACK
I, [2019-06-21T22:04:47.758967 #6511]  INFO -- : (0.000234s) SET standard_conforming_strings = ON
I, [2019-06-21T22:04:47.759189 #6511]  INFO -- : (0.000134s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:04:47.759379 #6511]  INFO -- : (0.000149s) SET DateStyle = 'ISO'
I, [2019-06-21T22:04:47.761653 #6511]  INFO -- : (0.002065s) SELECT NULL AS "nil" FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:04:47.762067 #6511]  INFO -- : (0.000197s) SELECT * FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:04:47.762969 #6511]  INFO -- : (0.000757s) SELECT "filename" FROM "schema_migrations" ORDER BY "filename"
I, [2019-06-21T22:05:21.688866 #6986]  INFO -- : (0.000179s) SET standard_conforming_strings = ON
I, [2019-06-21T22:05:21.689109 #6986]  INFO -- : (0.000157s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:05:21.689271 #6986]  INFO -- : (0.000123s) SET DateStyle = 'ISO'
I, [2019-06-21T22:05:21.690234 #6986]  INFO -- : (0.000783s) SELECT NULL AS "nil" FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:05:21.690585 #6986]  INFO -- : (0.000211s) SELECT * FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:05:21.691281 #6986]  INFO -- : (0.000542s) SELECT "filename" FROM "schema_migrations" ORDER BY "filename"
I, [2019-06-21T22:05:35.480215 #7625]  INFO -- : (0.000434s) SET standard_conforming_strings = ON
I, [2019-06-21T22:05:35.480642 #7625]  INFO -- : (0.000280s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:05:35.481022 #7625]  INFO -- : (0.000303s) SET DateStyle = 'ISO'
I, [2019-06-21T22:05:35.482127 #7625]  INFO -- : (0.000868s) SELECT NULL AS "nil" FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:05:35.482624 #7625]  INFO -- : (0.000331s) SELECT * FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:05:35.483327 #7625]  INFO -- : (0.000545s) SELECT "filename" FROM "schema_migrations" ORDER BY "filename"
I, [2019-06-21T22:07:56.405267 #8638]  INFO -- : (0.000193s) SET standard_conforming_strings = ON
I, [2019-06-21T22:07:56.405471 #8638]  INFO -- : (0.000100s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:07:56.405585 #8638]  INFO -- : (0.000077s) SET DateStyle = 'ISO'
I, [2019-06-21T22:07:56.406392 #8638]  INFO -- : (0.000571s) SELECT NULL AS "nil" FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:07:56.406678 #8638]  INFO -- : (0.000146s) SELECT * FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:07:56.407198 #8638]  INFO -- : (0.000370s) SELECT "filename" FROM "schema_migrations" ORDER BY "filename"
I, [2019-06-21T22:07:56.432053 #8638]  INFO -- : (0.003327s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"air_sensors"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:07:56.439259 #8638] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"location...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:07:56.442144 #8638] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: SELECT * FROM "locations" LIMIT 1
                      ^: SELECT * FROM "locations" LIMIT 1
E, [2019-06-21T22:07:56.447130 #8638] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurem...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurements"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:07:56.449748 #8638] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: SELECT * FROM "measurements" LIMIT 1
                      ^: SELECT * FROM "measurements" LIMIT 1
I, [2019-06-21T22:07:56.454979 #8638]  INFO -- : (0.002116s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"geo_locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
I, [2019-06-21T22:18:03.011692 #24804]  INFO -- : (0.000180s) SET standard_conforming_strings = ON
I, [2019-06-21T22:18:03.011964 #24804]  INFO -- : (0.000174s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:18:03.012222 #24804]  INFO -- : (0.000213s) SET DateStyle = 'ISO'
I, [2019-06-21T22:18:03.013918 #24804]  INFO -- : (0.001434s) SELECT "relname" FROM "pg_class" INNER JOIN "pg_namespace" ON ("pg_namespace"."oid" = "pg_class"."relnamespace") WHERE (("relkind" = 'r') AND ("pg_namespace"."nspname" = any(current_schemas(false))))
I, [2019-06-21T22:18:03.014540 #24804]  INFO -- : (0.000401s) SELECT * FROM "schema_info" LIMIT 1
I, [2019-06-21T22:18:03.015234 #24804]  INFO -- : (0.000387s) SELECT NULL AS "nil" FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:18:03.015622 #24804]  INFO -- : (0.000283s) SELECT * FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:18:03.016213 #24804]  INFO -- : (0.000454s) SELECT "filename" FROM "schema_migrations" ORDER BY "filename"
I, [2019-06-21T22:18:19.053192 #25777]  INFO -- : (0.000330s) SET standard_conforming_strings = ON
I, [2019-06-21T22:18:19.053392 #25777]  INFO -- : (0.000112s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:18:19.053538 #25777]  INFO -- : (0.000105s) SET DateStyle = 'ISO'
I, [2019-06-21T22:18:19.055222 #25777]  INFO -- : (0.001384s) SELECT "relname" FROM "pg_class" INNER JOIN "pg_namespace" ON ("pg_namespace"."oid" = "pg_class"."relnamespace") WHERE (("relkind" = 'r') AND ("pg_namespace"."nspname" = any(current_schemas(false))))
I, [2019-06-21T22:18:19.055811 #25777]  INFO -- : (0.000388s) SELECT * FROM "schema_info" LIMIT 1
I, [2019-06-21T22:18:19.056678 #25777]  INFO -- : (0.000431s) SELECT NULL AS "nil" FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:18:19.057075 #25777]  INFO -- : (0.000269s) SELECT * FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:18:19.057606 #25777]  INFO -- : (0.000399s) SELECT "filename" FROM "schema_migrations" ORDER BY "filename"
I, [2019-06-21T22:18:19.058173 #25777]  INFO -- : Begin applying migration 20190607194852_create_geo_locations.rb, direction: down
I, [2019-06-21T22:18:19.058453 #25777]  INFO -- : (0.000215s) BEGIN
I, [2019-06-21T22:18:19.062582 #25777]  INFO -- : (0.004018s) DROP TABLE "geo_locations"
I, [2019-06-21T22:18:19.063119 #25777]  INFO -- : (0.000304s) DELETE FROM "schema_migrations" WHERE ("filename" = '20190607194852_create_geo_locations.rb')
I, [2019-06-21T22:18:19.066333 #25777]  INFO -- : (0.003151s) COMMIT
I, [2019-06-21T22:18:19.066406 #25777]  INFO -- : Finished applying migration 20190607194852_create_geo_locations.rb, direction: down, took 0.008232 seconds
I, [2019-06-21T22:18:19.066428 #25777]  INFO -- : Begin applying migration 20190607194851_create_air_sensors.rb, direction: down
I, [2019-06-21T22:18:19.066716 #25777]  INFO -- : (0.000241s) BEGIN
I, [2019-06-21T22:18:19.067466 #25777]  INFO -- : (0.000663s) DROP TABLE "air_sensors"
I, [2019-06-21T22:18:19.067920 #25777]  INFO -- : (0.000319s) DELETE FROM "schema_migrations" WHERE ("filename" = '20190607194851_create_air_sensors.rb')
I, [2019-06-21T22:18:19.070916 #25777]  INFO -- : (0.002933s) COMMIT
I, [2019-06-21T22:18:19.070972 #25777]  INFO -- : Finished applying migration 20190607194851_create_air_sensors.rb, direction: down, took 0.004541 seconds
I, [2019-06-21T22:18:19.071831 #25777]  INFO -- : (0.000574s) SELECT "relname" FROM "pg_class" INNER JOIN "pg_namespace" ON ("pg_namespace"."oid" = "pg_class"."relnamespace") WHERE (("relkind" = 'r') AND ("pg_namespace"."nspname" = any(current_schemas(false))))
I, [2019-06-21T22:18:19.072243 #25777]  INFO -- : (0.000287s) SELECT * FROM "schema_info" LIMIT 1
I, [2019-06-21T22:18:39.730182 #26290]  INFO -- : (0.000355s) SET standard_conforming_strings = ON
I, [2019-06-21T22:18:39.730488 #26290]  INFO -- : (0.000164s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:18:39.730690 #26290]  INFO -- : (0.000141s) SET DateStyle = 'ISO'
E, [2019-06-21T22:18:39.737963 #26290] ERROR -- : PG::UndefinedTable: ERROR:  relation "air_sensors" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"air_sens...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"air_sensors"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:18:39.740477 #26290] ERROR -- : PG::UndefinedTable: ERROR:  relation "air_sensors" does not exist
LINE 1: SELECT * FROM "air_sensors" LIMIT 1
                      ^: SELECT * FROM "air_sensors" LIMIT 1
E, [2019-06-21T22:18:39.744410 #26290] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"location...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:18:39.747155 #26290] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: SELECT * FROM "locations" LIMIT 1
                      ^: SELECT * FROM "locations" LIMIT 1
E, [2019-06-21T22:18:39.753532 #26290] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurem...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurements"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:18:39.757122 #26290] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: SELECT * FROM "measurements" LIMIT 1
                      ^: SELECT * FROM "measurements" LIMIT 1
E, [2019-06-21T22:18:39.763216 #26290] ERROR -- : PG::UndefinedTable: ERROR:  relation "geo_locations" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"geo_loca...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"geo_locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:18:39.765877 #26290] ERROR -- : PG::UndefinedTable: ERROR:  relation "geo_locations" does not exist
LINE 1: SELECT * FROM "geo_locations" LIMIT 1
                      ^: SELECT * FROM "geo_locations" LIMIT 1
E, [2019-06-21T22:18:39.774552 #26290] ERROR -- : PG::UndefinedTable: ERROR:  relation "air_sensors" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"air_sens...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"air_sensors"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:18:39.777165 #26290] ERROR -- : PG::UndefinedTable: ERROR:  relation "air_sensors" does not exist
LINE 1: SELECT * FROM "air_sensors" LIMIT 1
                      ^: SELECT * FROM "air_sensors" LIMIT 1
I, [2019-06-21T22:23:20.440354 #2423]  INFO -- : (0.000334s) SET standard_conforming_strings = ON
I, [2019-06-21T22:23:20.440565 #2423]  INFO -- : (0.000117s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:23:20.440859 #2423]  INFO -- : (0.000241s) SET DateStyle = 'ISO'
I, [2019-06-21T22:23:20.442513 #2423]  INFO -- : (0.000642s) SELECT NULL AS "nil" FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:23:20.442976 #2423]  INFO -- : (0.000256s) SELECT * FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:23:20.443711 #2423]  INFO -- : (0.000557s) SELECT "filename" FROM "schema_migrations" ORDER BY "filename"
I, [2019-06-21T22:23:20.456470 #2423]  INFO -- : (0.002462s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"air_sensors"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:23:20.463128 #2423] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"location...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:23:20.465968 #2423] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: SELECT * FROM "locations" LIMIT 1
                      ^: SELECT * FROM "locations" LIMIT 1
E, [2019-06-21T22:23:20.471355 #2423] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurem...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurements"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:23:20.475449 #2423] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: SELECT * FROM "measurements" LIMIT 1
                      ^: SELECT * FROM "measurements" LIMIT 1
I, [2019-06-21T22:23:20.480773 #2423]  INFO -- : (0.001915s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"geo_locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
I, [2019-06-21T22:25:57.399605 #5357]  INFO -- : (0.000339s) SET standard_conforming_strings = ON
I, [2019-06-21T22:25:57.399817 #5357]  INFO -- : (0.000116s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:25:57.400104 #5357]  INFO -- : (0.000239s) SET DateStyle = 'ISO'
I, [2019-06-21T22:25:57.401003 #5357]  INFO -- : (0.000703s) SELECT NULL AS "nil" FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:25:57.401435 #5357]  INFO -- : (0.000292s) SELECT * FROM "schema_migrations" LIMIT 1
I, [2019-06-21T22:25:57.402129 #5357]  INFO -- : (0.000539s) SELECT "filename" FROM "schema_migrations" ORDER BY "filename"
I, [2019-06-21T22:25:57.415574 #5357]  INFO -- : (0.002412s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"air_sensors"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:25:57.421944 #5357] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"location...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:25:57.423874 #5357] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: SELECT * FROM "locations" LIMIT 1
                      ^: SELECT * FROM "locations" LIMIT 1
E, [2019-06-21T22:25:57.429914 #5357] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurem...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurements"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:25:57.432402 #5357] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: SELECT * FROM "measurements" LIMIT 1
                      ^: SELECT * FROM "measurements" LIMIT 1
I, [2019-06-21T22:25:57.437967 #5357]  INFO -- : (0.001639s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"geo_locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
I, [2019-06-21T22:27:55.719310 #7867]  INFO -- : (0.000246s) SET standard_conforming_strings = ON
I, [2019-06-21T22:27:55.719613 #7867]  INFO -- : (0.000183s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:27:55.719742 #7867]  INFO -- : (0.000085s) SET DateStyle = 'ISO'
I, [2019-06-21T22:27:55.720131 #7867]  INFO -- : (0.000220s) CREATE TABLE IF NOT EXISTS "schema_info" ("version" integer DEFAULT 0 NOT NULL)
I, [2019-06-21T22:27:55.720684 #7867]  INFO -- : (0.000450s) SELECT * FROM "schema_info" LIMIT 1
I, [2019-06-21T22:27:55.720968 #7867]  INFO -- : (0.000126s) SELECT 1 AS "one" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:27:55.721346 #7867]  INFO -- : (0.000252s) SELECT count(*) AS "count" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:27:55.721593 #7867]  INFO -- : (0.000129s) SELECT "version" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:27:55.721873 #7867]  INFO -- : (0.000117s) SELECT "version" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:27:55.738406 #7867]  INFO -- : (0.002929s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"air_sensors"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:27:55.741600 #7867] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"location...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:27:55.742805 #7867] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: SELECT * FROM "locations" LIMIT 1
                      ^: SELECT * FROM "locations" LIMIT 1
E, [2019-06-21T22:27:55.745065 #7867] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurem...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurements"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:27:55.745819 #7867] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: SELECT * FROM "measurements" LIMIT 1
                      ^: SELECT * FROM "measurements" LIMIT 1
I, [2019-06-21T22:27:55.749351 #7867]  INFO -- : (0.001723s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"geo_locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
I, [2019-06-21T22:44:50.760016 #24185]  INFO -- : (0.000299s) SET standard_conforming_strings = ON
I, [2019-06-21T22:44:50.760255 #24185]  INFO -- : (0.000128s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:44:50.760491 #24185]  INFO -- : (0.000184s) SET DateStyle = 'ISO'
I, [2019-06-21T22:44:50.760981 #24185]  INFO -- : (0.000279s) CREATE TABLE IF NOT EXISTS "schema_info" ("version" integer DEFAULT 0 NOT NULL)
I, [2019-06-21T22:44:50.761534 #24185]  INFO -- : (0.000400s) SELECT * FROM "schema_info" LIMIT 1
I, [2019-06-21T22:44:50.761856 #24185]  INFO -- : (0.000120s) SELECT 1 AS "one" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:44:50.762213 #24185]  INFO -- : (0.000214s) SELECT count(*) AS "count" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:44:50.763079 #24185]  INFO -- : (0.000149s) SELECT "version" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:44:50.763422 #24185]  INFO -- : (0.000168s) SELECT "version" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:44:50.779132 #24185]  INFO -- : (0.002570s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"air_sensors"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:44:50.785522 #24185] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"location...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:44:50.788074 #24185] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: SELECT * FROM "locations" LIMIT 1
                      ^: SELECT * FROM "locations" LIMIT 1
E, [2019-06-21T22:44:50.792772 #24185] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurem...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurements"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:44:50.794680 #24185] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: SELECT * FROM "measurements" LIMIT 1
                      ^: SELECT * FROM "measurements" LIMIT 1
I, [2019-06-21T22:44:50.798851 #24185]  INFO -- : (0.001432s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"geo_locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
I, [2019-06-21T22:48:38.405898 #25244]  INFO -- : (0.000332s) SET standard_conforming_strings = ON
I, [2019-06-21T22:48:38.406112 #25244]  INFO -- : (0.000117s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:48:38.406394 #25244]  INFO -- : (0.000234s) SET DateStyle = 'ISO'
I, [2019-06-21T22:48:38.406980 #25244]  INFO -- : (0.000382s) CREATE TABLE IF NOT EXISTS "schema_info" ("version" integer DEFAULT 0 NOT NULL)
I, [2019-06-21T22:48:38.407736 #25244]  INFO -- : (0.000626s) SELECT * FROM "schema_info" LIMIT 1
I, [2019-06-21T22:48:38.408205 #25244]  INFO -- : (0.000279s) SELECT 1 AS "one" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:48:38.408784 #25244]  INFO -- : (0.000371s) SELECT count(*) AS "count" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:48:38.410153 #25244]  INFO -- : (0.001185s) SELECT "version" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:48:38.410885 #25244]  INFO -- : (0.000396s) SELECT "version" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:48:38.425932 #25244]  INFO -- : (0.002741s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"air_sensors"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:48:38.432299 #25244] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"location...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:48:38.434919 #25244] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: SELECT * FROM "locations" LIMIT 1
                      ^: SELECT * FROM "locations" LIMIT 1
E, [2019-06-21T22:48:38.439861 #25244] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurem...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurements"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:48:38.441622 #25244] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: SELECT * FROM "measurements" LIMIT 1
                      ^: SELECT * FROM "measurements" LIMIT 1
I, [2019-06-21T22:48:38.447202 #25244]  INFO -- : (0.001574s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"geo_locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
I, [2019-06-21T22:51:15.240253 #25244]  INFO -- : (0.005382s) SELECT pg_attribute.attname AS pk FROM pg_class, pg_attribute, pg_index, pg_namespace WHERE pg_class.oid = pg_attribute.attrelid AND pg_class.relnamespace = pg_namespace.oid AND pg_class.oid = pg_index.indrelid AND pg_index.indkey[0] = pg_attribute.attnum AND pg_index.indisprimary = 't' AND pg_class.oid = CAST(CAST('"air_sensors"' AS regclass) AS oid)
E, [2019-06-21T22:51:15.244725 #25244] ERROR -- : PG::NotNullViolation: ERROR:  null value in column "created_at" violates not-null constraint
DETAIL:  Failing row contains (1, 3, null, null).: INSERT INTO "air_sensors" ("luftdaten_id") VALUES (3) RETURNING "id"
I, [2019-06-21T22:52:48.361409 #27504]  INFO -- : (0.000334s) SET standard_conforming_strings = ON
I, [2019-06-21T22:52:48.361595 #27504]  INFO -- : (0.000091s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:52:48.361764 #27504]  INFO -- : (0.000135s) SET DateStyle = 'ISO'
I, [2019-06-21T22:52:48.363041 #27504]  INFO -- : (0.000406s) CREATE TABLE IF NOT EXISTS "schema_info" ("version" integer DEFAULT 0 NOT NULL)
I, [2019-06-21T22:52:48.363788 #27504]  INFO -- : (0.000605s) SELECT * FROM "schema_info" LIMIT 1
I, [2019-06-21T22:52:48.364250 #27504]  INFO -- : (0.000282s) SELECT 1 AS "one" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:52:48.364794 #27504]  INFO -- : (0.000393s) SELECT count(*) AS "count" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:52:48.365226 #27504]  INFO -- : (0.000288s) SELECT "version" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:52:48.365616 #27504]  INFO -- : (0.000236s) SELECT "version" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:52:48.378473 #27504]  INFO -- : (0.002626s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"air_sensors"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:52:48.385433 #27504] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"location...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:52:48.388096 #27504] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: SELECT * FROM "locations" LIMIT 1
                      ^: SELECT * FROM "locations" LIMIT 1
E, [2019-06-21T22:52:48.392667 #27504] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurem...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurements"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:52:48.395235 #27504] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: SELECT * FROM "measurements" LIMIT 1
                      ^: SELECT * FROM "measurements" LIMIT 1
I, [2019-06-21T22:52:48.399983 #27504]  INFO -- : (0.001575s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"geo_locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
I, [2019-06-21T22:52:50.496005 #27504]  INFO -- : (0.004672s) SELECT pg_attribute.attname AS pk FROM pg_class, pg_attribute, pg_index, pg_namespace WHERE pg_class.oid = pg_attribute.attrelid AND pg_class.relnamespace = pg_namespace.oid AND pg_class.oid = pg_index.indrelid AND pg_index.indkey[0] = pg_attribute.attnum AND pg_index.indisprimary = 't' AND pg_class.oid = CAST(CAST('"air_sensors"' AS regclass) AS oid)
E, [2019-06-21T22:52:50.502283 #27504] ERROR -- : PG::NotNullViolation: ERROR:  null value in column "created_at" violates not-null constraint
DETAIL:  Failing row contains (2, 3, null, null).: INSERT INTO "air_sensors" ("luftdaten_id") VALUES (3) RETURNING "id"
I, [2019-06-21T22:53:00.513818 #27786]  INFO -- : (0.000347s) SET standard_conforming_strings = ON
I, [2019-06-21T22:53:00.514210 #27786]  INFO -- : (0.000231s) SET client_min_messages = 'WARNING'
I, [2019-06-21T22:53:00.514446 #27786]  INFO -- : (0.000144s) SET DateStyle = 'ISO'
I, [2019-06-21T22:53:00.515112 #27786]  INFO -- : (0.000384s) CREATE TABLE IF NOT EXISTS "schema_info" ("version" integer DEFAULT 0 NOT NULL)
I, [2019-06-21T22:53:00.515861 #27786]  INFO -- : (0.000543s) SELECT * FROM "schema_info" LIMIT 1
I, [2019-06-21T22:53:00.516226 #27786]  INFO -- : (0.000149s) SELECT 1 AS "one" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:53:00.516627 #27786]  INFO -- : (0.000251s) SELECT count(*) AS "count" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:53:00.516899 #27786]  INFO -- : (0.000138s) SELECT "version" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:53:00.518069 #27786]  INFO -- : (0.000142s) SELECT "version" FROM "schema_info" LIMIT 1
I, [2019-06-21T22:53:00.533012 #27786]  INFO -- : (0.002409s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"air_sensors"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:53:00.539096 #27786] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"location...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:53:00.541366 #27786] ERROR -- : PG::UndefinedTable: ERROR:  relation "locations" does not exist
LINE 1: SELECT * FROM "locations" LIMIT 1
                      ^: SELECT * FROM "locations" LIMIT 1
E, [2019-06-21T22:53:00.546011 #27786] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: ..."."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurem...
                                                             ^: SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"measurements"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
E, [2019-06-21T22:53:00.548249 #27786] ERROR -- : PG::UndefinedTable: ERROR:  relation "measurements" does not exist
LINE 1: SELECT * FROM "measurements" LIMIT 1
                      ^: SELECT * FROM "measurements" LIMIT 1
I, [2019-06-21T22:53:00.553098 #27786]  INFO -- : (0.001393s) SELECT "pg_attribute"."attname" AS "name", CAST("pg_attribute"."atttypid" AS integer) AS "oid", CAST("basetype"."oid" AS integer) AS "base_oid", format_type("basetype"."oid", "pg_type"."typtypmod") AS "db_base_type", format_type("pg_type"."oid", "pg_attribute"."atttypmod") AS "db_type", pg_get_expr("pg_attrdef"."adbin", "pg_class"."oid") AS "default", NOT "pg_attribute"."attnotnull" AS "allow_null", COALESCE(("pg_attribute"."attnum" = ANY("pg_index"."indkey")), false) AS "primary_key" FROM "pg_class" INNER JOIN "pg_attribute" ON ("pg_attribute"."attrelid" = "pg_class"."oid") INNER JOIN "pg_type" ON ("pg_type"."oid" = "pg_attribute"."atttypid") LEFT OUTER JOIN "pg_type" AS "basetype" ON ("basetype"."oid" = "pg_type"."typbasetype") LEFT OUTER JOIN "pg_attrdef" ON (("pg_attrdef"."adrelid" = "pg_class"."oid") AND ("pg_attrdef"."adnum" = "pg_attribute"."attnum")) LEFT OUTER JOIN "pg_index" ON (("pg_index"."indrelid" = "pg_class"."oid") AND ("pg_index"."indisprimary" IS TRUE)) WHERE (("pg_attribute"."attisdropped" IS FALSE) AND ("pg_attribute"."attnum" > 0) AND ("pg_class"."oid" = CAST(CAST('"geo_locations"' AS regclass) AS oid))) ORDER BY "pg_attribute"."attnum"
I, [2019-06-21T22:53:02.304591 #27786]  INFO -- : (0.003980s) SELECT pg_attribute.attname AS pk FROM pg_class, pg_attribute, pg_index, pg_namespace WHERE pg_class.oid = pg_attribute.attrelid AND pg_class.relnamespace = pg_namespace.oid AND pg_class.oid = pg_index.indrelid AND pg_index.indkey[0] = pg_attribute.attnum AND pg_index.indisprimary = 't' AND pg_class.oid = CAST(CAST('"air_sensors"' AS regclass) AS oid)
E, [2019-06-21T22:53:02.309363 #27786] ERROR -- : PG::NotNullViolation: ERROR:  null value in column "created_at" violates not-null constraint
DETAIL:  Failing row contains (3, 3, null, null).: INSERT INTO "air_sensors" ("luftdaten_id") VALUES (3) RETURNING "id"
